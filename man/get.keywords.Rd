% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/get_keywords.R
\name{get.keywords}
\alias{get.keywords}
\title{Get keywords from .fcs file(s)}
\usage{
get.keywords(fcs.file.paths)
}
\arguments{
\item{fcs.file.paths}{Character string; path(s) usually returned from \code{list.files(...,full.names=T,pattern=".fcs")}.}
}
\value{
a list containing three elements:
\itemize{
\item \verb{[['parameters']]} -- parameters, unique by 'PROJ' (from '$PROJ': name(s) of the experiment project(s)); row-bound \code{data.table}.
\item \verb{[['parameters.non']]} -- non-parameter keywords; row-bound \code{data.table}.
\item \verb{[['spill']]} -- a list of spillover matrices; unique by 'PROJ' (from '$PROJ': name(s) of the experiment project(s)).
}
}
\description{
Parameter ("$P|P") keywords in the TEXT section of a .fcs file specify standard, cytometer-specific parameter names/values; Non-parameter keywords in the TEXT section of a .fcs file specify standard/optional cytometer/sample-specific meta-data. The "$SPILLOVER" keyword in the TEXT section of a .fcs file specifies a spillover matrix (for fluorescence compensation). This function allows parsing of these keywords without the overhead of reading the DATA section of the .fcs file.
}
\examples{

extdata <- system.file("extdata",package="spectr")
fcs.file.paths <- list.files(extdata,full.names=TRUE,pattern="BLOCK.*.fcs")

keywords<-get.keywords(fcs.file.paths)

keywords$parameters #parameters data.table
keywords$parameters.non #non-parameters data.table
keywords$spill #spill/spillover

#project-specific parameters
keywords$parameters[PROJ \%in\% levels(PROJ)[1]]
#project-specific parameters; selecting two columns; data.table syntax
keywords$parameters[PROJ \%in\% levels(PROJ)[1]][,.(N,S)]

#project-specific keywords
keywords$parameters.non[`$PROJ` \%in\% unique(`$PROJ`)[1]]
#project-specific keywords; selecting two columns; data.table syntax
keywords$parameters.non[`$PROJ` \%in\% unique(`$PROJ`)[1]][,.(TUBENAME,`$DATE`)]

#create new keywords
keywords$parameters.non[
i=grep("001_CYTOKINE",TUBENAME),
j=c('study.id','batch.id','panel.id','block.id','block.aliquot')
:=data.table::tstrsplit(TUBENAME,"_",type.convert=as.factor,keep=c(1:3,5:6))]

#create new keywords
keywords$parameters.non[
i=grep("AIM|002_CYTOKINE",TUBENAME),
j=c('study.id','batch.id','panel.id','block.id','block.aliquot')
:=data.table::tstrsplit(TUBENAME,"_",type.convert=as.factor)]

#construct a new 'sample.id' from existing keywords;
#use data.table's assignment operator ':='
keywords$parameters.non[,
sample.id := paste(study.id,batch.id,panel.id,block.id,block.aliquot,sep="_")]
keywords$parameters.non[['sample.id']]

}
